<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sanbang.dao.ezs_communicateMapper" >
  <resultMap id="BaseResultMap" type="ezs_communicate" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="addTime" property="addTime" jdbcType="TIMESTAMP" />
    <result column="deleteStatus" property="deleteStatus" jdbcType="BIT" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="display" property="display" jdbcType="BIT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="dictType_id" property="dictType_id" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, addTime, deleteStatus, content, display, name, dictType_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from ezs_communicate
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from ezs_communicate
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="ezs_communicate" >
    insert into ezs_communicate (id, addTime, deleteStatus, 
      content, display, name, 
      dictType_id)
    values (#{id,jdbcType=BIGINT}, #{addTime,jdbcType=TIMESTAMP}, #{deleteStatus,jdbcType=BIT}, 
      #{content,jdbcType=VARCHAR}, #{display,jdbcType=BIT}, #{name,jdbcType=VARCHAR}, 
      #{dictType_id,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="ezs_communicate" >
    insert into ezs_communicate
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="addTime != null" >
        addTime,
      </if>
      <if test="deleteStatus != null" >
        deleteStatus,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="display != null" >
        display,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="dictType_id != null" >
        dictType_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="addTime != null" >
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteStatus != null" >
        #{deleteStatus,jdbcType=BIT},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="display != null" >
        #{display,jdbcType=BIT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="dictType_id != null" >
        #{dictType_id,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="ezs_communicate" >
    update ezs_communicate
    <set >
      <if test="addTime != null" >
        addTime = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteStatus != null" >
        deleteStatus = #{deleteStatus,jdbcType=BIT},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="display != null" >
        display = #{display,jdbcType=BIT},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="dictType_id != null" >
        dictType_id = #{dictType_id,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="ezs_communicate" >
    update ezs_communicate
    set addTime = #{addTime,jdbcType=TIMESTAMP},
      deleteStatus = #{deleteStatus,jdbcType=BIT},
      content = #{content,jdbcType=VARCHAR},
      display = #{display,jdbcType=BIT},
      name = #{name,jdbcType=VARCHAR},
      dictType_id = #{dictType_id,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>